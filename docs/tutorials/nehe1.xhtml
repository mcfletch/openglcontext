<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta content="text/html; charset=utf-8" http-equiv="content-type" />
<title>NeHe Translations: Context Setup (NeHe 1)</title>
    <link href="./tutorial.css" type="text/css" rel="stylesheet" />
</head>
<body>
<table width="100%"><thead>
	<tr>
		<td width="8em;"></td><th align="center"><a href="index.xhtml">OpenGLContext Python tutorials</a></th><td width="8em;"></td>
	</tr>
	<tr>
	<td><a href="index.xhtml">Index</a></td>
	<td align="center">NeHe Translations: Context Setup (NeHe 1)</td>
	<td align="right"><a href="nehe2.xhtml">Next</a></td>
	</tr>
</thead></table>
	<div class="code-sample">#! /usr/bin/env python
</div>
	<div class="commentary">
	<h1 class="title">Context Setup (NeHe 1)</h1>
	<div class="paragraph">
	<img src="nehe1.py-screen-0001.png" alt="Screenshot" class="" />
</div>
	<div class="paragraph">This tutorial is based loosely on the 
	<a href="http://nehe.gamedev.net/data/lessons/lesson.asp?lesson=01" class="">NeHe1 tutorial</a>
	 by Jeff Molofee, though the code is entirely unique to OpenGLContext.  It demonstrates the creation of a basic rendering Context. Note: OpenGLContext takes care of most of the setup seen in the NeHe code (though doing so also means that there's less direct control of the setup process), leaving a very simple core script.
</div>
	<div class="paragraph">The first thing we do is get a Context class.  OpenGLContext provides a "testingcontext" module which allows you to use whatever context-type the user has specified as "prefered".  The testingcontext module provides a function "getInteractive" which takes an optional list of the context-name to retrieve, and returns an appropriate Context sub-class and a MainFunction which is called to start the Context's rendering loop.
</div>
</div>
	<div class="code-sample">from OpenGLContext import testingcontext
BaseContext, MainFunction = testingcontext.getInteractive()
</div>
	<div class="commentary">
	<div class="paragraph">We make the standard OpenGL commands available to our code using an import * statement.</div>
</div>
	<div class="code-sample">from OpenGL.GL import *
</div>
	<div class="commentary">
	<div class="paragraph">Now we sub-class the BaseContext class we got in stage one with our own "TestContext" class.  In this very simple example this stage is not actually necessary, as we have no customisations of the class that we want to do, but it is the "normal" approach to using OpenGLContext Contexts.</div>
</div>
	<div class="code-sample">
class TestContext( BaseContext ):
	"""A subclass of the (dynamically determined) BaseContext,
	by overriding various methods, we could customize the
	functionality of this context, but the tutorial doesn't
	ask us to do this."""
</div>
	<div class="commentary">
	<div class="paragraph">And finally, we make the script run MainFunction with an instance of our TestContext if the module is run as a script.</div>
</div>
	<div class="code-sample">
if __name__ == "__main__":
	MainFunction ( TestContext)
</div>
<table width="100%"><thead>
	<tr>
		<td width="8em;"></td><th align="center"><a href="index.xhtml">OpenGLContext Python tutorials</a></th><td width="8em;"></td>
	</tr>
	<tr>
	<td><a href="index.xhtml">Index</a></td>
	<td align="center">NeHe Translations: Context Setup (NeHe 1)</td>
	<td align="right"><a href="nehe2.xhtml">Next</a></td>
	</tr>
</thead></table>
<div class="metadata">This document was generated by <code>bzr branch http://bazaar.launchpad.net/%7Emcfletch/pyopengl/directdocs/</code> on 2009-08-03T00:22:52.324264 from nehe1.py</div>
</body>
</html>